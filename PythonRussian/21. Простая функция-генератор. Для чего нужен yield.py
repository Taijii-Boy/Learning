# yield показывает, что функция - генератор
# Функция-генератор на выходе возвращает сам генератор
# генератор ленивый. Не будет работать, пока его не попросят
# Генератор одноразовый
# После перебора всех знпчений, генератор выбросит StopIteration. Если for обрабатывает это исключение, то генератор - нет. Нужно перехватывать вручную
# После выполнения yield встает на паузу (хранит локальные переменные)


# squares = (x**2 for x in range(0, 11, 2))
#
# print(squares)
# for i in squares:
#     print(i)


# Создадим функцию-генератор, похожую на genexp
# def squares2():
#     print("Generator working")  # При вызове функции эта строка не выполняется, т.к. функция возвращает объект-генератор. Срабатывает при вызове самого генератора
#     for e in range(0, 11, 2):
#         yield e**2
#
#
# gen = squares2()
# # print(gen)
# #
# # for i in gen:
# #     print(i)
# print(next(gen))

#
def pause():
    print("Генератор работает...")
    while True:
        print(a)
        yield a  # Здесь выполнение становится на паузу. Возвращает 10, 20, 100500

a = 10
gen = pause()
print(next(gen))
a = 20
print(next(gen))
a = 100500
print(next(gen))
